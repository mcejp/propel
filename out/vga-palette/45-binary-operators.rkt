(#%begin
 ((#%construct ())
  (#%construct ())
  (#%c-array-initialization
   (#%scoped-var 0 my-palette)
   (#%builtin-type I)
   ((#%literal 190)
    (#%literal 74)
    (#%literal 47)
    (#%literal 215)
    (#%literal 118)
    (#%literal 67)
    (#%literal 234)
    (#%literal 212)
    (#%literal 170)
    (#%literal 228)
    (#%literal 166)
    (#%literal 114)
    (#%literal 184)
    (#%literal 111)
    (#%literal 80)
    (#%literal 115)
    (#%literal 62)
    (#%literal 57)
    (#%literal 62)
    (#%literal 39)
    (#%literal 49)
    (#%literal 162)
    (#%literal 38)
    (#%literal 51)
    (#%literal 228)
    (#%literal 59)
    (#%literal 68)
    (#%literal 247)
    (#%literal 118)
    (#%literal 34)
    (#%literal 254)
    (#%literal 174)
    (#%literal 52)
    (#%literal 254)
    (#%literal 231)
    (#%literal 97)
    (#%literal 99)
    (#%literal 199)
    (#%literal 77)
    (#%literal 62)
    (#%literal 137)
    (#%literal 72)
    (#%literal 38)
    (#%literal 92)
    (#%literal 66)
    (#%literal 25)
    (#%literal 60)
    (#%literal 62)
    (#%literal 18)
    (#%literal 78)
    (#%literal 137)
    (#%literal 0)
    (#%literal 153)
    (#%literal 219)
    (#%literal 44)
    (#%literal 232)
    (#%literal 245)
    (#%literal 255)
    (#%literal 255)
    (#%literal 255)
    (#%literal 192)
    (#%literal 203)
    (#%literal 220)
    (#%literal 139)
    (#%literal 155)
    (#%literal 180)
    (#%literal 90)
    (#%literal 105)
    (#%literal 136)
    (#%literal 58)
    (#%literal 68)
    (#%literal 102)
    (#%literal 38)
    (#%literal 43)
    (#%literal 68)
    (#%literal 24)
    (#%literal 20)
    (#%literal 37)
    (#%literal 255)
    (#%literal 0)
    (#%literal 68)
    (#%literal 104)
    (#%literal 56)
    (#%literal 108)
    (#%literal 181)
    (#%literal 80)
    (#%literal 136)
    (#%literal 246)
    (#%literal 117)
    (#%literal 122)
    (#%literal 232)
    (#%literal 183)
    (#%literal 150)
    (#%literal 194)
    (#%literal 133)
    (#%literal 105))
   #f)
  (#%define (#%scoped-var 0 my-length) (#%len (#%scoped-var 0 my-palette)) #f)
  (#%define
   (#%scoped-var 0 palette-put)
   (#%external-function
    palette-put
    ((#%parameter (#%scoped-var 1 index) (#%builtin-type I))
     (#%parameter (#%scoped-var 1 value) (#%builtin-type I)))
    (#%builtin-type V)
    "<conio.h>")
   #f)
  (#%defun
   (#%scoped-var 0 show-palette)
   ()
   (#%builtin-type V)
   (#%begin
    ((#%begin
      ((#%define (#%scoped-var 2 _i) (#%literal 0) #t)
       (#%while
        (#%c++-binary-operator
         "<"
         (#%scoped-var 2 _i)
         (#%len (#%scoped-var 0 my-palette)))
        (#%begin
         ((#%define
           (#%scoped-var 2 color)
           (#%get (#%scoped-var 0 my-palette) (#%scoped-var 2 _i))
           #f)
          (#%app
           (#%scoped-var 0 palette-put)
           ((#%scoped-var 2 _i) (#%scoped-var 2 color)))
          (#%set-var
           (#%scoped-var 2 _i)
           (#%c++-binary-operator
            "+"
            (#%scoped-var 2 _i)
            (#%literal 1)))))))))))))
